---
- name: Setup K3s Kubernetes Cluster
  hosts: all
  become: true
  tasks:
    - name: Update and install necessary packages  # Task to update and install packages
      apt:
        name:                                 # List of packages to be installed
          - vim                               # Text editor
          - git                               # Version control system
          - docker.io                         # Docker container runtime
        state: latest                         # Ensure the latest version is installed
        update_cache: yes                     # Update the repository cache before installing
    
    - name: Install Docker                    # Task to explicitly install Docker (might be redundant with the above)
      apt:
        name: docker.io                       # Docker package from Ubuntu repositories
        state: present                        # Ensure Docker is installed
    
    - name: Check if K3s is installed on master node
      command: k3s --version
      register: k3s_installed
      failed_when: false
      changed_when: false
      when: inventory_hostname == 'master'

    - name: Set fact for K3s installation status on master
      set_fact:
        is_k3s_installed: true
      when: 
        - inventory_hostname == 'master'  # Ensures the task is intended for master
        - k3s_installed is defined  # Checks if the variable is defined to avoid errors on other hosts
        - k3s_installed.rc == 0  # Checks the return code to ensure K3s is installed

- name: Configure nodes
  hosts: all
  become: true
  tasks:
    - name: Enable required container features
      lineinfile:
        path: /boot/cmdline.txt
        backrefs: yes
        regexp: '^(.*)$'
        line: '\1 cgroup_enable=cpuset cgroup_enable=memory cgroup_memory=1 swapaccount=1'
      when: (inventory_hostname == 'master' and is_k3s_installed is not defined) or inventory_hostname != 'master'
      notify: Reboot the node

  handlers:
    - name: Reboot the node
      ansible.builtin.reboot:

- name: Install K3s on master node
  hosts: master
  become: true
  tasks:
    - name: Install K3s
      shell: curl -sfL https://get.k3s.io | sh -
      when: is_k3s_installed is not defined
      async: 600
      poll: 0

- name: Join K3s worker nodes to the cluster
  hosts: node1,node2
  become: true
  tasks:
    - name: Fetch K3s cluster token from master node
      command: cat /var/lib/rancher/k3s/server/node-token
      register: k3s_token
      delegate_to: master
      run_once: true

    - name: Join node to K3s cluster
      shell: curl -sfL https://get.k3s.io | K3S_URL=https://master:6443 K3S_TOKEN={{ hostvars['master'].k3s_token.stdout }} sh -
      when: hostvars['master'].k3s_token.stdout is defined
